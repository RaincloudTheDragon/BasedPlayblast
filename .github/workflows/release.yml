name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v0.2.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Version
        id: get_version
        run: |
          # Extract version directly from __init__.py
          VERSION=$(python -c "import re; version_match = re.search(r'\"version\": \((\d+), (\d+), (\d+)\)', open('__init__.py').read()); print(f'{version_match.group(1)}.{version_match.group(2)}.{version_match.group(3)}') if version_match else '0.0.0'")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "zip_name=BasedPlayblast.v$VERSION.zip" >> $GITHUB_OUTPUT
      
      - name: Create ZIP
        run: |
          # Create a temporary directory structure
          mkdir -p addon_files/BasedPlayblast
          
          # Copy only the required files into the addon directory
          cp __init__.py README.md addon_files/BasedPlayblast/
          # Copy the updater files
          cp addon_updater.py addon_updater_ops.py addon_files/BasedPlayblast/
          
          # Copy additional directories if they exist
          if [ -d "updater" ]; then
            cp -r updater addon_files/BasedPlayblast/
          fi
          
          # Include other necessary files if they exist
          if [ -f "requirements.txt" ]; then
            cp requirements.txt addon_files/BasedPlayblast/
          fi
          
          if [ -f "bl_info.json" ]; then
            cp bl_info.json addon_files/BasedPlayblast/
          fi
          
          # Create the zip from the temporary directory
          cd addon_files
          zip -r "../${{ steps.get_version.outputs.zip_name }}" ./*
      
      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.get_version.outputs.zip_name }}
          tag_name: ${{ inputs.release_tag }}
          generate_release_notes: true
          draft: true 